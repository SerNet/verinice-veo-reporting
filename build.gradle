plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'groovy'
    id 'jacoco'
    id "com.github.spotbugs" version '4.7.0'
    id "com.github.hierynomus.license" version "0.15.0"
    id "com.gorylenko.gradle-git-properties" version "2.2.4"
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'javax.validation:validation-api'
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation 'com.vladsch.flexmark:flexmark-all:0.62.2'
    implementation 'com.openhtmltopdf:openhtmltopdf-core:1.0.8'
    implementation 'com.openhtmltopdf:openhtmltopdf-pdfbox:1.0.8'
    implementation 'com.openhtmltopdf:openhtmltopdf-slf4j:1.0.8'

    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def continuousIntegrationBuild = rootProject.hasProperty('ci')

spotbugsTest.enabled = false
// write human readable report on normal builds
spotbugsMain.reports {
    // Jenkins needs xml reports to detect and display bugs.
    xml.enabled = continuousIntegrationBuild
    html.enabled = !continuousIntegrationBuild
}

license {
    header = file("templates/licenseHeader.txt")
    exclude "reports/**"
    exclude "templates/*"
    skipExistingHeaders = true
    ext["year"] = java.util.Calendar.getInstance().get(Calendar.YEAR)
    ext["author"] = "git config user.name".execute().text.trim() ?: "<name>"
}

springBoot {
    buildInfo {
        properties {
            if (rootProject.hasProperty('ciBuildNumer')) {
                additional = [
                    'ci.buildnumber': rootProject.getProperty('ciBuildNumer'),
                    'ci.jobname': rootProject.getProperty('ciJobName')
                ]
            }
        }
    }
}
